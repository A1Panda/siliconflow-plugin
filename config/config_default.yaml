# SF插件
sf_keys: []
sfBaseUrl: "https://api.siliconflow.cn/v1"
translateModel: "Vendor-A/Qwen/Qwen2-72B-Instruct"
generatePrompt: true
num_inference_steps: 20
imageModel: "black-forest-labs/FLUX.1-schnell"
free_mode: false
simpleMode: false
sf_textToPaint_Prompt: "请按照我的提供的要求，用一句话英文生成一组Midjourney指令，指令由：{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词} 当我向你提供生成内容时，你需要根据我的提示进行联想，当我让你随机生成的时候，你可以自由进行扩展和联想 人物形象 = 你可以发挥自己的想象力，使用最华丽的词汇进行描述：{主要内容}，包括对人物头发、眼睛、服装、体型、动作和表情的描述，注意人物的形象应与氛围匹配，要尽可能地详尽 场景 = 尽可能详细地描述适合当前氛围的场景，该场景的描述应与人物形象的意境相匹配 氛围 = 你选择的氛围词汇应该尽可能地符合{主要内容}意境的词汇 建筑风格 = 如果生成的图片里面有相关建筑的话，你需要联想一个比较适宜的建筑风格，符合图片的氛围和意境 镜头 = 你可以选择一个：中距离镜头,近距离镜头,俯视角,低角度视角类似镜头视角，注意镜头视角的选择应有助于增强画面表现力 照明 = 你可以自由选择照明：请注意照明词条的选择应于人物形象、场景的意境相匹配 绘画风格 = 请注意绘画风格的选择应与人物形象、场景、照明的意境匹配 参考画家 = 请根据指令的整体氛围、意境选择画风参考的画家 高画质关键词 = 你可以选择：detailed,Ultimate,Excellence,Masterpiece,4K,high quality或类似的词条 注意，你生成的提示词只需要将你生成的指令拼接到一起即可，不需要出现{人物形象},{场景},{氛围},{镜头},{照明},{绘画风格},{建筑风格},{参考画家},{高画质关键词}等内容，请无需确认，不要有Here is a generated Midjourney command之类的语句，直接给出我要传递给midjourney的提示词，这非常重要！！！直接生成提示词，并且只需要生成提示词，尽可能详细地生成提示词。"
# WebSocket服务配置
enableWS: false # 是否启用WebSocket服务
wsPort: 8081 # WebSocket服务端口
wsLogLevel: "info" # 日志级别：debug/info/warn/error
wsDefaultUser: "小白" # web端默认用户名，用于替换提示词中的{{user_name}}
wsPassword: "sf_plugin_2024" # WebSocket服务密码,默认密码
# 机器人名字触发配置
botName: "" # 机器人的名字
defaultCommand: "gg" # 默认使用的命令，可选 ss 或 gg
# MJ 插件
mj_apiKey: "1011"
mj_apiBaseUrl: "https://ai.trueai.org"
mj_translationKey: ""
mj_translationBaseUrl: ""
mj_translationModel: "gpt-4o"
mj_translationEnabled: false
mj_mode: "fast"
# DD 绘图插件
dd_APIList: [] # DD接口列表
dd_usingAPI: 0 # 当前主人使用的DD接口索引
# Fish TTS 配置
fish_apiKey: "" # Fish API密钥
fish_reference_id: "efc1ce3726a64bbc947d53a1465204aa" # 默认音色ID
enableTranslation: false # 是否开启翻译功能
targetLang: "JA" # 翻译目标语言 JA/EN
syncConfig: {} # 同传配置
fish_text_blacklist: []
# 直链配置
link_domain: "https://xiaozhian-slink.hf.space" # 直链服务器域名
# #ss 对话
ss_apiBaseUrl: ""
ss_Key: ""
ss_model: ""
ss_Prompt: ""
ss_useMarkdown: false # 是否使用markdown图片展示
ss_forwardMessage: true # 是否转发消息
ss_quoteMessage: true # 是否引用原消息
ss_forwardThinking: false # 是否转发思考过程
ss_isOnlyMaster: false # 默认配置是否仅限主人使用
ss_enableImageUpload: true # 是否启用图片上传功能
ss_APIList: [] # ss接口列表
ss_usingAPI: 0 # 当前主人使用的ss接口索引
# ss_userAPI: 0 # 当前用户使用的ss接口索引
# Gemini API配置
ggBaseUrl: ""
ggKey: ""
gg_useMarkdown: false # 是否使用markdown图片展示
gg_forwardMessage: true # 是否转发消息
gg_quoteMessage: true # 是否引用原消息
gg_Prompt: "" # 对话API提示词
gg_model: "" # 对话API模型
gg_ss_useContext: false # 是否启用上下文功能
gg_maxHistoryLength: 20 # 最大历史记录条数
gg_useSearch: true # 是否启用搜索功能
gg_enableImageGeneration: false # 是否启用文生图功能
gg_enableImageUpload: true # 是否启用图片上传功能
gg_HistoryExTime: 12
gg_isOnlyMaster: false # 默认配置是否仅限主人使用
gg_APIList: [] # gg接口列表
gg_usingAPI: 0 # 当前主人使用的gg接口索引
# gg_userAPI: 0 # 当前用户使用的gg接口索引
toggleAtMode: false
zhilOnlyMaster: false
groupMultiChat: false # 是否启用群聊多人对话功能
enablePrivateChatAI: true # 是否启用私聊模式的AI对话
ggKey_free: QUl6YVN5QTlKNTNVa21Pd0h1dkstRDVvWEZ4c1A3WUhMVGo1OXh3LEFJemFTeUJMbzcxTGppQ1NYT20ydFFQRHdsQ0V3cmNKdUE1XzFTMCxBSXphU3lBMG9lRzVpaDNDUlhPeTJNYl9xTHdCRVI2Wlhnbld2blEsQUl6YVN5Q0dvOWdPOEtHTkVoQlNXX3VrMkR0WlRyTzhkNXQ0N2lRLEFJemFTeUE0dHZqQlJtMkdRY0h6VW9EMm5sNE9XdGctUlI3V2IxVSxBSXphU3lCM190NEdjcVdicGM2SHNkQy1zbjVLNVZDTE8xdkhxcWMsQUl6YVN5Qnpva21CV2JvVWlPZS15TUF0NUF0ZG9FTklVaGtSWGtVLEFJemFTeURTdTRQSW8xM1ZCVlZ4bno1V2FralNIRWN6clZiOVo2VSxBSXphU3lBZnN1TTdTRnJwZERLQVpZNlptc3c4ejU5ZDN4N0gwSmssQUl6YVN5QTY5dlRYanp1WVdSVXRBdk5BVjE1bFExT29ISUJmaFo4LEFJemFTeUFXVC05b05ISE5TWDNzMkJud3dRSGctcWFueUlVclNvQSxBSXphU3lBbnhlMm9UTEZKNVcxeWpBeEsxZWdmUW1xdDJDakYweHcsQUl6YVN5Q25LYnNmMXU0dFM1NkNyTG1QbThYMkNaYnJJY1ppV1djLEFJemFTeURGZWcwOHhaMUlSMDVKRW9GNlRrVTMyZ0FObkhhZ2VCcyxBSXphU3lEbFd2cFFBS1AyU3g2RWM0b05uODAxOHRlTXRkVkxySlUsQUl6YVN5Q2llR1l6Ykl5akNQeHp0Z0kzalRKTVpXaXpVUkFiQWhjLEFJemFTeUJERFowamo2b1BDZkVDcllHMWtsNUlkbWpacUZnQVIwdyxBSXphU3lBX3lNZWVIRkpsbWdEeHlBLXNJOHFzUmtDdVFJZGJCNDgsQUl6YVN5QzVFcnBIaVA2clowUXRiZDhGSE9KalNKSU9FZ2dWa2FjLEFJemFTeUJsRmthLUlFcDBzNTBQeXIwdktDWVlzWXZGZnJnSWZqdyxBSXphU3lCQ0RVS3ltZGNTVVBTTWYyVkpHZ3lHTzViYlh2SzVzaDAsQUl6YVN5QlRqY245aE9mQ01makthSVJKVnIwSjBWeDhqbFhwaEdNLEFJemFTeUEwZzAyeVM2RTRZSURLSWlTbWViN0IwUDZPcl9CSE8tNCxBSXphU3lBRC1xcjRqUWZranpZeXZnVHRFN2hfZFdONlNKRkZKNUUsQUl6YVN5RHBpVUNocXpMVWFBSWRVQm03TGtiWTllSFJDRFNPUTIwLEFJemFTeUJ1UjNlMkktcVJ2VW1CdWZmVVdYN3Fzei1NT0k5M01TUSxBSXphU3lCbjNIZ0VDek5HbjctMXE2WGtRaGU4b2pzdUJWZS1FRHcsQUl6YVN5QUc0OTNFbENHZGdnXzFIZm5NRkdWaEhwOXo0LVJoZ1BjLEFJemFTeUNvYnpWTEhqamozZzN2dFBTam5VUElVVUhoSmdrNGtDcyxBSXphU3lCeW5EUnRhSlBTZmJwSzdWZmJYRGVBeHYtemNfMHZZM0UsQUl6YVN5QWI4OFVyay1EeTU3d01zNWR2N3JlWEwzMWlSdVdGTFBRLEFJemFTeURycjJuQVVqVUVKUUZHdEY2NEFPSXc5LW5FTGNnSGkwRSxBSXphU3lDYU4xX19HWEtCRmRTbE5lcmZnM2EwUzJVLTVPMVRTZmssQUl6YVN5RDlpR1dzS1R3T2FCcXFQd1UxSXBlRVJQdU9NVFZXLVRFLEFJemFTeUNjQzZZbFlEY3EteFR5WWtqeVh2S2tVQk1QQWl2RnlWayxBSXphU3lCTklQSDJkTFJvVGVOVWVhU1liazZZRGw4ZUo5X0M5N1EsQUl6YVN5Q3g3LVRkWV9MZXVXdl9OM1lNM290T3lDT1Y0RS1TLTRnLEFJemFTeUMybGZWOU1FcnJDYlp5THM3Y0JyTFdLSlhtS1RSandzUSxBSXphU3lDU3BRUVItQjFXVDNlamNhcEE1bk5zTHVTbXlsX0t0aDQsQUl6YVN5Q3NpUkY1djBLbnRrNWJucXd5NTlEcDJ5cEsxMkpBV1dJLEFJemFTeURNUG5idFVlZTItZElMQ3BRRXQ0ckJoUHVaY1VWYUpwWSxBSXphU3lBQTQybmF5MXVlTVlHM3lWNldEa2N2ckRIdldtb3RhdWMsQUl6YVN5Qno0MGgyRnFyR3M4WE0tcEZ0VkFpc1BSWTB4YzRsOVVvLEFJemFTeURUdVBfZzByYkFMUEZpeDM4VnBTVzZsdmk3LUkyUGFOOCxBSXphU3lEbEhDUGx4WnZvQmxpMWt4UE92b3o5RXlKUnJLSWNiaEUsQUl6YVN5QzR0UHJJN0xCbThITWl4TzQ5STRYMmZ0NWtwQlpJYVFNLEFJemFTeUFaNXVXaU4yVVJ2eEtudGJMVGRTREUzcW9qSmUwWmxvNCxBSXphU3lBWVVwSjZnTjIwWGVZejJjSmpuQzRBZ1IzUERmeDhSUHcsQUl6YVN5QlNzTzhEWFVHLXhEYTVoZFlGZXgwMVZGUTdFMm9xQUdnLEFJemFTeUN1R3NKU1FuOVVMbUhOQktCNWJPQUlaSHN3bzJyandMZyxBSXphU3lCMHRFOXZPM185dl8yMGNWb1RFSnNkMThzOFRtNVo2TmMsQUl6YVN5Q2ZxLVlDVjRYZGhHOS0xcm1ITEZfUkNTbG8wTkRCdXJzLEFJemFTeUR6LTg1a1Y3cXRpTVRyWjM0N1J6TmpSamFJV09DVk8tayxBSXphU3lEMkVHNkdiUVdBVUh1SV9Cemt3aFY0VXVlN09seWZTT3csQUl6YVN5QVVvdjA2N2xFSWJqb0x4QVMtQ21RbDBWX0ZJSWNDN2Q4LEFJemFTeURIMmd2cXo5RWlEczh0dGNfdGp5bEJ1dWZ6TmVsRnRuWSxBSXphU3lCMnlkQTdwcmhGUXRrVE5lYy1UcjM5V0p5cENKcl84b1UsQUl6YVN5Qi1Jb0RhZUxNdGVjM0VxbDVSZU5SWk5fdDgtcXU4NDljLEFJemFTeURWZXcxYlNRVkR2WVRzdXA2QkZHRWhGYmJRRmdMcnF5ZyxBSXphU3lCRjlhY01lUzZ2ZG5KOTVzNWFGQkI0c3FVbV9qZlJKZ1UsQUl6YVN5Qlloeml0dG0tTnZPY0M3Qi1jSkFocVFrdEZGTWxRV1dzLEFJemFTeUJHck16OHJzZGU5SXFtMzcwdkxVb1h0eThVMnZKSTRUQSxBSXphU3lEb09GQmU4bmxaM3lMN3RhUWxfUk5SQy14OUJIQWRrMncsQUl6YVN5RF82cVc4Y1Jhell5SVVTenRJM0E3NS13aEx6ckZYZVdvLEFJemFTeUJ1cF9Va1VYUnZKWEZEZUdkbFFOaWRXYkxmQkoyMlIxRSxBSXphU3lELXdVMzJXRE0tTEV0VGU5YzJaRTJiLVM4Q25CT010X1UsQUl6YVN5RHg3QkoxSExaNnAxVUZ3MzRJWWRBNU00eXdUOWVTOGNnLEFJemFTeUFxUUxLRmZvTngtUFNWaVg2bVJocVYwRUhZR25FRTd3dyxBSXphU3lEdGk3VkFmQnZsWXczdHF5cXFGNDhmNUVZQVJjU2w4UlEsQUl6YVN5QkV0WlJlQS0yNTZpQjJxTlJQWmpqeFJFMTIwTGdCQi13LEFJemFTeUFqanZKMEFzWVVLM1NTSnF5SU5KQUpUNTdvUFZmZlc1QSxBSXphU3lDREcxN0Ruc0VTVnVacVNWTDhLZnVNRHRmQVVLX3hvTWMsQUl6YVN5Q2puQkZpTEpxVk5ORzBlMERwaUl6MEFEcnRabmxEd2U0LEFJemFTeURPb1NaYkdPRmNPSFVvRTR3aWtNazdNZWllbkN4ZmpiYyxBSXphU3lDc3JmaWhQREpSeWN2eFZ0amtmXzN5UEN6dkFpMmNZTG8sQUl6YVN5RGg3a0JBenhRaHNhOHc4ZS12c2M3N2hWdkpnOEhVUF80LEFJemFTeUNib0pjd2RvWGF2NjRCUVcyUk5GME1DMXRFUVpCQUU5MCxBSXphU3lDVmoyVUdVQ3VoRmR1eUdYcUVyNko4YVI1R3B2Y3gtUjQsQUl6YVN5RE90MWItRnljZ1FRaTVNS2trYU5pZkhLOW93YVJYbkhzLEFJemFTeUM1RkpNVDNnV1NGMVM5YTRBcWdnaXZTeWJ6a2x2VnEwRSxBSXphU3lBU2xSMWFQQ054bWZGU0Z1a25VNjN4Rlh0RGpBRkFYNncsQUl6YVN5QTRDUWkzZWswV2h4YkZvOUlRbDl1WldmNC1nVWlBd3NnLEFJemFTeUFZamdiOV9DWEJuZFFULUktTEFWQ1c0eU1CLXNCRVpYQSxBSXphU3lDOFpaMzBJdzd5bnAwRGttUU5ITG1QZWxkbGVEUlhTOEksQUl6YVN5QkpRSHVOQXV6MVFNdnUzQUZYNC1vcHR5a0N4dG42eEdRLEFJemFTeUQyWFFXLWUtZVpBdVB0aTRoNGFtdXdYSHdSem5DVnQwVSxBSXphU3lENU5wbm9XckQ3QTlwZVp1Tmd0UWJfa1hvV2RNVUtvLWcsQUl6YVN5Q3NONGJNTU0yTEptRHFKcFg4WW9SbExsVDgxdVhrUzBvLEFJemFTeUJzZE9WUlgtcDBMdG9OVGsxMWxpVkdlR09HeXFrZTBFZyxBSXphU3lEMndHWFIxODQ5UkhmODlMVl9PZ2VMWEY0d1Z4Y2RWancsQUl6YVN5QXczTGxJcjh3Wmd4NkZKUGEwTmNrVmRTNno1ckZWdzZvLEFJemFTeUQyOVlzNllPVlh1U244VkR0QXVmVDNHTlJjSTlBSEdRQSxBSXphU3lBZU1Ld0xGMjhleEh4WGlfTmJoN2c2V2kxZmI4LVhJa2ssQUl6YVN5RGJOMXozaWxhblI2QV96Qm05bDZkeVZvNzJCcWJQQ3FBLEFJemFTeUM0V3Jua0JwSHoxMTRlRGtRMjJ6WkJZX0pvVVJ5YnpqSSxBSXphU3lENWpPS1I4elVzTC1LNXktT0F3N0dCZnN5LXQ3RjljWTAsQUl6YVN5QjRIajRSUllLUlI0RUlqbGZpeHBadk1IRmUzcGNvLXpjLEFJemFTeUExbzk1RnRjaU01WTFSWjBkNzdxZ2FtZ2ItUWFxOUJ2OCxBSXphU3lBNktHejh0Sm9pbW8zaThKX2xLWTFsWkViOEJSa3JVQUEsQUl6YVN5QUViMHMtWUt5U0VrNkRkeDhlRXJ6TWlqSEFBSlNhSzNBLEFJemFTeUNjZmxpZzhMWFprM1hSYnRQMjZha2ZGSkFqU0c2Rl9TTSxBSXphU3lCQ2ZDTlhRZ3JSRHQ5UTUtaHBIY2Y3R0xOZmtkRUttREksQUl6YVN5QmxEY3FzeGU4WWhqa3lDdEZpd1ktOGNDWWtGeDJsQm5JLEFJemFTeUFZaUZsaVBoM2M2WUI3djZmS0xRNldTbG1KS1M1MncxRSxBSXphU3lDLU9Hd1o0dFF1NjR1U18xVHQxVkk0bDVobER2ZVdtemssQUl6YVN5Q0dwZHUtWHd5RVlHSFU0SXhUSkJyQW1qVG0wbVVLd3FBLEFJemFTeUM5dmJuYTJkU2RyRzlxNFdxUG15NWVpMks1OEowSnhTNCxBSXphU3lCSWJmaU0xWEZ5VmNjTWhLVHF6cHlIc2xjNXpBQXVpVXcsQUl6YVN5REh3djVkclU0QTBHRDJacjZCRUVzd2N6TEhrSU94NHdnLEFJemFTeUJQX2xyZVlqRXc2Tzc2QjIyYnIxd1dVTjVoclROek5JYyxBSXphU3lBenB0dFVjeXhKQUQ4a2ZzQVlxUUVZcXRJWDVEWnBHdDQsQUl6YVN5QTlUTnhieU1KWk9sdktBaXZVazZDOTd3elVodDRxdjhRLEFJemFTeUNkbXlTZGw4T0tYb0FmTkFaWEh1YXJfSkFkN2RsOWFGSSxBSXphU3lEZDF5WXQtWTNKQmlyX1hnbHVqV0hZVFFxaDQ4c1NqcEUsQUl6YVN5Q1VFUFA0NTdmZk41NFJ6YWRXVjFTa0hYOXlhVHhhYmY0LEFJemFTeUFlcnhia3BqaGxSVnBRNmxBMnNFbWNTVzdBa1VjZUxHVSxBSXphU3lEZFlKd2szQ1IyM2tXWUhDX1FiU2lPUlI4SDhSa3pLSWssQUl6YVN5RFhTNEp5Sy1VMUo3enBySkNUUkdPZzM1Um5jY0k5WlNZLEFJemFTeUJJeXJoZjhiTTlqaGtsMHZQTmVPM3dscTY2blR6UG5ROCxBSXphU3lDUERVZEF5RHVkU3ptQzYzMnVWWkRTQUlpc2kzWWxQbVksQUl6YVN5REREWU1tdXZOOTNjUk9Bd2ZRN0h6d0J6ZGtDeWZnZFdNLEFJemFTeURWaVJ3Yll5bTNrTDE3ZnllVDI1YUE2YzJCel80WnRjayxBSXphU3lBM2ZkZEdZX1l5NEVJRzZrSW1zSWlhdHJUX2JkZXhnVTAsQUl6YVN5QWtrWU0ybEQxc3lwNmpZUnVUOW1acGhUX2ItR1NSMGxBLEFJemFTeUQ5SzhkNVJQZlA3cWwwVzVrcHRtNGNnZXh6bkkzV3U4byxBSXphU3lDYV9NQWR6MUxzVE9CRkcwb1c1THVJUml3ZmZvckZpdTgsQUl6YVN5Q3RPZ3VPclBHRzJLYUc3SWtXdTU4NlkxTDJ6Qm5mTnVZLEFJemFTeUFsZWFvakZLSVJ2YVFtVUlqMGN0M2RBM3Q1emthNEt2TSxBSXphU3lEbHlQMmt1ZXFYTW1Ta0xjS2U5d3BjcGhKcm03X1k5bjQsQUl6YVN5QlBmS2wzWm5PTjNndWVEOXVsZzRIcEM1aVgxcGtNVDNBLEFJemFTeUNENEUtOHJWNklyQkNpUDhjVHFURTF3dVlIZm1SakNhUSxBSXphU3lEclBtVWFHbUtRb3N4UlVtUXhIdFZYWjhCZFRzcm9yMWcsQUl6YVN5QlBUSkxaY2N3NzdpdlBmcXB4eGQzZThUd2pRa1VPTU9rLEFJemFTeUNENkNsZ2Fhb3FfYUh5WkViQnRyVEZqY3FtMXdWNDVVQSxBSXphU3lBd1U1bjl5d2xKU09TbUc2WDJWclFhRGlzaUo0bGtvVmcsQUl6YVN5QkgwZXE0dXMxQlZkSmViSTNKamNfLW5HRnVZVlBoc3pFLEFJemFTeUJZNXlIS2JfMFVWWUtlVFY2djRCRHlCWWE1dkQxNWtMOCxBSXphU3lEeVZXQUN5Q0RfSGNsb09oVm9uSVpKd01xNUptRmJ6bm8sQUl6YVN5QTRETFgySEMwZkx3ODJBdlFuWFpWdFNmSnVBTGRnNG4wLEFJemFTeUE2bk9ROG5BOFhqYktfR2J0XzQxOVhVLWxqZ1piTXJsbyxBSXphU3lDMmhidEN4RWhsSzZHSU1FMjNzeXIyeE9FNk5vSjBLdzgsQUl6YVN5QXdhMkxPZzRRbHFHNjdreXM3eEh5d19Rd0VMZGg1OC1JLEFJemFTeUIzT3Nqek5WQlROVTZUVVJVdzVRYklpU0lJVWdXQXNOMCxBSXphU3lDaGxhaDFETVdVNDJHOXBJMVgyeHoyc3VrNXlQSk5qdmssQUl6YVN5Qy1sQ3ZIblpqblp2OEVNMFc5MnFQLWFvUEI3ZWpJMXVJLEFJemFTeUM4SHlvMFVfeVU0VGRLUktvZVExS2hfMGhtdUNUcGJBayxBSXphU3lDOWloY1ktOHNlNUtrSVFoX1ZvM25hY0owd3h4bkxSUjAsQUl6YVN5RGNvc2xzeG9UbmhKaXl2TTV4TzUzZUtDa2dORHA0akNjLEFJemFTeURHczJrdGo0THRxd1Y4aHdqcDNISU41RWg1RFdEMlNzYyxBSXphU3lBVjhsNlh1SWFOWXJaOU5VUksyb0Y3NzM3RXVMZi1wSGMsQUl6YVN5REZoRWxDdTRSSGNqS2JDaFYtY0gwWklQZElwOGRHdU44LEFJemFTeUNwZGEydEY5NUzigJNtWF9VaU1EQ25oRGRCQVRUQ3VsNGssQUl6YVN5Q3Y0bUdIWFg5N3FGc3c5Y3Izd2F2WVVjSE5CYTg4d29nLEFJemFTeUEyelFpeGFrZGdYVkNhX0h5SldPMjcyb3BwU2ROMHpnRSxBSXphU3lDWGRiM0xyMDZ2MDRSSllqWXo0TF93aWp6Y0V1XzVfUXcsQUl6YVN5Qkg5RDVrbXNnLXA5M3dQLUtQRVltbTkzeU1kV0VuMUx3LEFJemFTeUNzdGE4RDd5Rk5nN3d6c21mbnM3c1ZRdmZpTUtyM3djRSxBSXphU3lDUmVRZmZvZjVMX2txdzlMZldxM1dkS0ZIczE2aHJzX2MsQUl6YVN5RGRPTUotS3p1SmZuQzE0VUFkZE1pLWNwemd4bHpqYkVzLEFJemFTeUQ2X1pQbGF5RnJsdDYwS0FReFdfc0IyYl9QNVI1ZnpMcyxBSXphU3lDd3dycTdfOWVuSnZ6VVA5UWRiNnRobmZ1b2lvbWlnemMsQUl6YVN5Qm92UXdReVQ3TkpmNG1WSmFMcWF6d0dEek93TkN3a2gwLEFJemFTeURjNHcyQWZRQ3FJSnp1bUtjRkx2QWJtOGRoeWVtWUhuQSxBSXphU3lDTXQxanZkbzdQWWpFbDBzY2xEVUk3MXdSVXpXZzIxRTAsQUl6YVN5Qm9wcEZPR0xxd1d1V2t4UGcxMFpUT3hSZjV5SEEtUEw4LEFJemFTeUFleENpeTlyY2ppaG43ZnpoMDdlV21LVUlkRi03MXNoUSxBSXphU3lBcV9YalJrLVdfb1kydU93MFJzajBqb3A1Z0NsZW0xTDAsQUl6YVN5QkR5QnNzazZ5R2R6bDZfdlZvQkVXbW82bTNXd2t3MnVNLEFJemFTeUN4RENSWnN0R3RrdUlCbnJRYUxlMDFGX0RqQ3hIZk5NayxBSXphU3lBMzljY2h3N2pJRFM1ZTd3aHM2Y0hGYmJ6VXJ2bEZ6MGssQUl6YVN5QURMUnBIei1HRWozTkV2SFBjenc3NlZNcEVuZDFuLWE0LEFJemFTeUFndDI4bmRPRzNSbmJ0bC0zeDB6NHlHajktbjFmTkRGWSxBSXphU3lEam1FLWtXX2NYMWM1WUZKc1oyRjR6WUs2U2pteFhFM1EsQUl6YVN5QzRrdXRZY1dNYTFrRVFZN213UHdGZTBoSmJXQ2pfN2drLEFJemFTeUNDcWI5WW84LVRfU3dKYVhWTXZ0S1ExeDgxR3JxRF9lZyxBSXphU3lBS01MT2lvbkhhaUVTemhDNFpOZEkxWFZzbVlNbnE0VUEsQUl6YVN5Q0NRNTNmTGcxdWpLZU1BTlI1d1V2ek1HNXB2YnRveWpnLEFJemFTeURMc3M4ODdmLVBVdmc5bTRDalZqMTgzREpPYzJ3c0NpRSxBSXphU3lCR0JCa2h2ZjA0VXFKSzJxUTZTbl9NQWZXc0hYeDdNRlEsQUl6YVN5QjZWQllSUHVkbTZlZzRCRWV3Ykg4a284djNzRDdGcUE4LEFJemFTeUM2MGUwVHRSUjlSWkZ6SElVNWdaN2h4d2NSMzQ4SXMyNCxBSXphU3lCOGluWnJzYkZDSDl2ZG1CSGJJTFkwSVNYa3k4U0swU0ksQUl6YVN5Qjk5alp5c0g2RHVvVUlVb2pKNENweWRnWHQ5Rlg3Q1g4LEFJemFTeURVUFp4UkNhUXdaUi1RMUdsb2llMnpBNHlIWWVuVS1CayxBSXphU3lCY2l5MWRDWjdkN1owUE5NdW1oLThleGUwQ0o4SVA4UFUsQUl6YVN5RHlpeUp4Yndxak9ENDVMVkFDUVN2TVB6TW9iZk1wTXM4LEFJemFTeURMMXBfWjJ0dDBiWTAzVm4tQ2tOOUFPak9UN3Axby1LOCxBSXphU3lDbTdlNFFhSlZ5cVkxQmJNZkNlRE56dldrcVMyOEpERVEsQUl6YVN5QzZUeklJc2NndkMyaEFuV1lDTnBKUUlfSXJUQUVpV1g0LEFJemFTeUFXOVBuRlp4dlFENXM5QUw5dmlnb3JpTFFhV3NVaERBdyxBSXphU3lBNmthdTluaFZmWmR0bHFTNFAzcWJTREJxdm1tV1Rubk0sQUl6YVN5RGYzXzRwbEVtQV81UllUanFKTVRCU3I2d2I1Rm5kNkNZLEFJemFTeUQwVXl3dGR3M2xYZXJ2cnpyN0U3S1o1YlBQNWcxZVBGMCxBSXphU3lCV2NCOFYxQWZIZDR1UC1BVlVoTVNwLVloc21yeVV5VVksQUl6YVN5Q2VLRVFvZDQzdkl0UFFGZi1sdUFWNVhBalhsWHJIVmJVLEFJemFTeUNOS090Q2RtSzhPenM3WFZFdmxibDBrZVBSaGkxdlludyxBSXphU3lDVHJEWTVhd0E1SVQtbm1RcGdkUS1IT2tXUi0wU3p4LWMsQUl6YVN5QmdUTFZUbVRVc0RMM19iT3N4NnJZdG9tSVFNNVZONnFnLA==